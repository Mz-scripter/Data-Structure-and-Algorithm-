# -*- coding: utf-8 -*-
"""001 find_closest_num_to_zero.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/114bZ1uLUk4hRIAXYaWv1cSlp7WUs0_lL

# Find Closest Number to Zero
Given an integer array ```nums``` of size ```n```, return the number with the value ***closest*** to 0 in ```nums```. If there are multiple answers, return the number with the ***largest*** value.
> [Link to Question](https://leetcode.com/problems/find-closest-number-to-zero/description/)
"""

from typing import List

class Solution:
  def findClosestNumber(self, nums: List[int]) -> int:
    closest = nums[0]
    for x in nums:
      if abs(x) < abs(closest):
        closest = x
    if closest < 0 and abs(closest) in nums:
      return abs(closest)
    else:
      return closest
#Time complexity: 0(n)
#Space complexity: 0(1)
nums = [-4,7,5,4,8]
solution = Solution()
result = solution.findClosestNumber(nums)
print(result)